const fs = require("fs-extra");

module.exports.config = {
  name: "randomimage",
  version: "1.0.0",
  hasPermission: 0,
  credits: "Rakib Boss",
  description: "Random image system with add/remove feature",
  commandCategory: "fun",
  usages: "-randomimage / -addrandomimage / -removerandomimage",
  cooldowns: 2,
};

const dataFile = __dirname + "/cache/randomImages.json";

module.exports.run = async function ({ api, event, args }) {
  const { threadID, messageID, messageReply, body } = event;

  // Ensure file exists
  if (!fs.existsSync(dataFile)) fs.writeFileSync(dataFile, JSON.stringify([]));
  let images = JSON.parse(fs.readFileSync(dataFile));

  const subcommand = args[0];

  // ЁЯУд Show random image
  if (!subcommand || subcommand === "get") {
    if (images.length === 0) return api.sendMessage("ЁЯУВ ржХрзЛржирзЛ рж░тАНрзНржпрж╛ржирзНржбржо ржЫржмрж┐ ржЦрзБржБржЬрзЗ ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯржирж┐ред ржЖржЧрзЗ ржХрж┐ржЫрзБ ржЫржмрж┐ ржпрзЛржЧ ржХрж░рзБржи -addrandomimage ржжрж┐рзЯрзЗред", threadID, messageID);
    const img = images[Math.floor(Math.random() * images.length)];
    return api.sendMessage({ body: "ЁЯО┤ рж░тАНрзНржпрж╛ржирзНржбржо ржЫржмрж┐:", attachment: await global.utils.getStreamFromURL(img) }, threadID, messageID);
  }

  // тЮХ Add new image
  if (subcommand === "add" || subcommand === "addrandomimage") {
    let url = "";

    if (messageReply && messageReply.attachments.length > 0) {
      const imgData = messageReply.attachments[0];
      if (imgData.type === "photo") url = imgData.url;
    } else if (args[1] && args[1].startsWith("http")) {
      url = args[1];
    } else {
      return api.sendMessage("тЭМ ржжрзЯрж╛ ржХрж░рзЗ reply ржжрж┐рзЯрзЗ ржЕржержмрж╛ рж▓рж┐ржВржХ ржжрж┐рзЯрзЗ ржЫржмрж┐ ржжрж┐ржиред\nржЙржжрж╛рж╣рж░ржг: -addrandomimage [image link]", threadID, messageID);
    }

    if (images.includes(url)) return api.sendMessage("тЪая╕П ржПржЗ ржЫржмрж┐ ржЗрждрж┐ржоржзрзНржпрзЗ рждрж╛рж▓рж┐ржХрж╛рзЯ ржЖржЫрзЗ!", threadID, messageID);

    images.push(url);
    fs.writeFileSync(dataFile, JSON.stringify(images, null, 2));
    return api.sendMessage("тЬЕ ржирждрзБржи ржЫржмрж┐ рж╕ржлрж▓ржнрж╛ржмрзЗ ржпрзЛржЧ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ!", threadID, messageID);
  }

  // тЮЦ Remove image
  if (subcommand === "remove" || subcommand === "removerandomimage") {
    if (!messageReply || !messageReply.attachments[0]) return api.sendMessage("тЭМ ржжрзЯрж╛ ржХрж░рзЗ ржпрзЗ ржЫржмрж┐ржЯрж┐ ржорзБржЫрждрзЗ ржЪрж╛ржи рж╕рзЗржЯрж┐ржХрзЗ reply ржХрж░рзБржиред", threadID, messageID);

    const targetURL = messageReply.attachments[0].url;
    if (!images.includes(targetURL)) return api.sendMessage("тЭМ ржПржЗ ржЫржмрж┐ рждрж╛рж▓рж┐ржХрж╛рзЯ ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯржирж┐!", threadID, messageID);

    images = images.filter(img => img !== targetURL);
    fs.writeFileSync(dataFile, JSON.stringify(images, null, 2));
    return api.sendMessage("ЁЯЧСя╕П ржЫржмрж┐ рждрж╛рж▓рж┐ржХрж╛ ржерзЗржХрзЗ ржорзБржЫрзЗ ржлрзЗрж▓рж╛ рж╣рзЯрзЗржЫрзЗ!", threadID, messageID);
  }
};
